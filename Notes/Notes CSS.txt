                                                CSS Terminology
CSS (Cascading Stile Sheeps) - change the appearance of HTML Elements
CSS Selector - which elements we are targeting
Pseudo-class - additional styles on interacting
CSS Box Model - how much space an element takes up and how far it is away from other elements   *f12 on needing web-page, clik on needing element, tab "Computed"
CSS Specificity - property priority. The selector that is more specific has higher priority (class name selector > element name selector)
Display Property - css property, with save witch you can switch type special element
Font stack - backup font
CSS Grid - layout that has rows and columns (fixes the distance problem between <div>; simplifies alignment of multiple <div>)
Flexbox - (is similar to CSS Grid, but it's more flexible)
    !!! Big different: Grid = rigid layout; Flexbox = flexible layout
    Flexbox & Grid: Which one to use?
CSS Position - helps to hold the element in a certain place (exp. when scrolling)

                                                CSS Syntax Rules
<style>
    button {
        background-color: red;
    }
</style>
    button - CSS Selector    *in exp - everithing buttons on the web-page
    {} - !important!
    background-color - CSS Property
    red - CSS Value 
    : - to separate a Property from a Value

<style>
    .specialclassname {}
</style>
    .specialclassname - selected an element on the web-page with the name "specialclassname"

<style>
.button:hover {}
.button:active {}
</style>
:hover :active : - Pseudo-class
:hover - additional styles on hover
:active - additional styles on click

<style>
.meow,
.cat {} - style for 2 special elements

                                                CSS Property
margin-right: 0px; - indent to the right on the element
transition: opacity 0s; - smooth transition 
    "opacity" - certain CSS Property
    0 - time tranisition 

box-shadow: *inset* 1px 2px 3px black;
    1px - right
    2px - down
    3px - blur
    "black" - needing color    *rgba(0, 0, 0, 0)
    inset - shadow incide ()

    display: block; inline block; - Display Property

overflow: hidden; - inside div

                                                CSS Property for text
font-size - size
font-weight - weight (exp. bold)
font-family - font (exp. TimesNewRoman)
        font-family: roboto, arial; - font stack
text-decoration: underline;
text-align: center;
line-height: 24px;
vertical-align: middle; - align objects in the middle
outline: none; - remove <input> text border

                                                CSS Grid
display: grid;
grid-template-columns: 1px 2px... 5px 1fr;
    1px - width 1 column
    2px - width 2 column...
    1fr - special value in grid (fr - free space) - this column will take up the remaining space in the row as a block
column-gap: 0px;
row-gap: 0px;

                                                CSS Flexbox
display: flex;
    .div1 {flex: 1;}
    .div2 {width: 200px}
        div1, div2 - elents inside Flexbox
        flex: 1; - stretching in width relative to other elements inside Flexbox
        width: 200px; - the exact width of the element inside Flexbox
flex-direction: row; column;
justify-content: start; - default
    : end; center;
    : space-beetwen; - equal space between elements
align-items: stretch; - default - align vertical
    : start; end; center;
flex-shrink: 0; - don't shrink

                                                Search bar CSS
.classname::placeholder {}
width: 0; - shrink

                                                CSS Position
position: static; fixed; absolute; relative;
    static - defoult
    fixed - fixed and floats over static elements; placed in the !browser window!
    absolute - similarly "fixed", but placed on the page (picture "position fixed and absolute")
        the most important feature is the placement of an element inside another element (in the corner of the sidebar, in the corner of the picture).
    relative - it still displays the element as normal except if we position absolute in here it will position it relative to this element instead of relative to the page
top: 0px;
    0px; - distance from the top of the browser
        bottom: 0px; right: 0px; left: 0px;
            !!! if you set opposite directions, the element will stretch
z-index: 0; 1; 2;...
    z-index - determines which element will be in front and which will be behind
    0 - defoult for all elements
    1 - elements "0" will be under element "1"
    2 - elements "0" and "1" will be under element "2"

